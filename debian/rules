#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
# export DH_COMPAT=3

# This is the versions of upstream
UPSTREAM = hiki
UPSTREAM_VERSION = 0.4.2a

# all patches we want to apply
PATCHES := $(sort $(subst debian/patches/,,$(wildcard debian/patches/*.dpatch)))

unpack: unpack-stamp
unpack-stamp:
	[ -d "build" ] || mkdir build

	# unpack to build/upstream
	cd $(CURDIR)/build && \
	tar xzf $(CURDIR)/$(UPSTREAM)-$(UPSTREAM_VERSION).tar.gz

	touch unpack-stamp

patch: patch-stamp
patch-stamp: unpack-stamp
	[ -d patches-stamp ] || mkdir -p patches-stamp
	echo "Patches applied in the Debian version of ${PACKAGE}:" \ > $@TMP
	cd $(CURDIR)/build/$(UPSTREAM)/ && \
	S=$(CURDIR)/$@TMP && \
	for patch in $(PATCHES); do \
		stamp=$(CURDIR)/patches-stamp/$$patch; \
		patch_short=$$patch; \
		patch=$(CURDIR)/debian/patches/$$patch; \
		test -e $$patch || ( echo $$patch not found; exit 1 ); \
		test -x $$patch || chmod +x $$patch; \
		if test -f $$stamp; then \
			echo "$$patch_short already applied."; \
			echo -e "\n$$patch_short:" >> $$S; \
			sed -n 's/^## *DP: */  /p' $$patch >> $$S; \
		else \
			echo -n "applying patch $$patch_short..."; \
			if $$patch -patch >$$stamp.new 2>&1; then \
				mv $$stamp.new $$stamp; \
				touch $$stamp; \
				echo -e "\n$$patch_short:" >> $$S; \
				sed -n 's/^## *DP: */  /p' $$patch >> $$S; \
				echo " ok."; \
			else \
				echo " failed."; \
				exit 1; \
			fi; \
		fi; \
	done
	mv -f $@TMP $@

build: unpack patch
	# noting to do

clean:
	dh_testdir
	dh_testroot

	# Clean build and stamps
	rm -rf build
	rm -rf unpack-stamp patch-stamp patch-stampTMP patches-stamp

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/hiki.
	find build/$(UPSTREAM) -name \*.rb -print | xargs chmod 644
	cd build/$(UPSTREAM) && \
	mv hikiconf.rb.sample hikiconf.rb && \
	DESTDIR=$(CURDIR)/debian/hiki ruby $(CURDIR)/debian/install.rb && \
	install -m 755 hiki.cgi $(CURDIR)/debian/hiki/usr/lib/cgi-bin/hiki.cgi && \
	cp -r data messages misc plugin template theme $(CURDIR)/debian/hiki/usr/share/hiki
	install -m 755 debian/hikisetup $(CURDIR)/debian/hiki/usr/bin/hikisetup


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -i build/hiki/ChangeLog
	dh_installdocs -i
	dh_installexamples -i
#	dh_install -i
#	dh_installmenu -i
#	dh_installdebconf -i	
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installinfo -i
	dh_installman -i debian/hikisetup.1
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary: binary-indep
.PHONY: build clean binary-indep binary install patch unpack
